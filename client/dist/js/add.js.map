{"version":3,"sources":["add.jsx"],"names":[],"mappings":"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","file":"add.js","sourcesContent":["import React, {Component, PropTypes} from 'react';\nimport {insert} from './db.js';\nimport {co} from 'co';\n\nclass Add extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            _cls: 'display',\n            _imgSrc: '',\n            _nameCls: 'empty',\n            _hrefCls: 'empty',\n            _chapterCls: 'empty',\n            _imgCls: 'empty'\n        }\n    }\n    show() {\n        this.setState({\n            _cls: 'display'\n        });\n    }\n    hidden() {\n        this.setState({\n            _cls: 'hidden'\n        });\n    }\n    clear() {\n        this.refs['name'].value = '';\n        this.refs['href'].value = '';\n        this.refs['chapter'].value = '';\n        this.refs['img'].value = '';\n        this.setState({\n            _nameCls: 'empty',\n            _hrefCls: 'empty',\n            _chapterCls: 'empty',\n            _imgCls: 'empty',\n            _imgSrc: ''\n\n        });\n    }\n    insert() {\n        let _name = this.refs['name'].value || '莫名',\n            _href = this.refs['href'].value || 'http://www.didamoe.com',\n            _chapter = this.refs['chapter'].value || '1',\n            _img = this.state._imgSrc,\n            {getAll} = this.props;\n        co(function* () {\n            yield insert({\n                'name': _name,\n                'href': _href,\n                'img': _img,\n                'id': new Date().getTime()\n            });\n            getAll();\n            this.hidden();\n            this.clear();\n        }.bind(this))\n    }\n    toBase64(file) {\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        return new Promise((so) => {\n            reader.onload = (e) => {\n                this.setState({\n                    _imgSrc: e.target.result\n                });\n                so(e.target.result);\n            }\n        })\n    }\n    handleChange(ref) {\n        if (this.refs[ref].value.length != 0) {\n            this.setState({\n                ['_' + ref + 'Cls']: 'fill'\n            });\n        } else {\n            this.setState({\n                ['_' + ref + 'Cls']: 'empty'\n            });\n        }\n        if (ref == 'img') {\n            this.toBase64(this.refs['img'].files[0]);\n        }\n    }\n    render() {\n        let {_cls, _nameCls, _hrefCls, _chapterCls, _imgCls, _imgSrc} = this.state;\n        return (\n            <div className={'add ' + _cls}>\n                <div className='all_input'>\n                    <div className='name-wrap'>\n                        <input ref='name' onChange={() => { this.handleChange('name') } } id='name' className={'name ' + _nameCls} type=\"text\" />\n                        <label htmlFor=\"name\"><span>名字</span></label>\n                    </div>\n                    <div className='href-wrap'>\n                        <input ref='href' onChange={() => { this.handleChange('href') } } id='href'  className={'href ' + _hrefCls} type=\"text\" />\n                        <label htmlFor=\"href\"><span>连接</span></label>\n                    </div>\n                    <div className='chapter-wrap'>\n                        <input ref='chapter' onChange={() => { this.handleChange('chapter') } } id='chapter'  className={'chapter ' + _chapterCls} type=\"text\" />\n                        <label htmlFor=\"chapter\"><span>章节</span></label>\n                    </div>\n                    <div className='img-wrap'>\n                        <input ref='img' onChange={() => { this.handleChange('img') } } id='img'  className={'img ' + _imgCls} type=\"file\" />\n                        <label htmlFor=\"img\"><span>图片</span></label>\n                        {_imgSrc ? <img className='preview' src={_imgSrc} alt=\"preview\"/> : ''}\n                    </div>\n                </div>\n                <p className='save-btn' onClick={() => { this.insert() } }>一发入魂</p>\n            </div>\n        );\n    }\n}\n\nAdd.propTypes = {\n\n};\n\nexport default Add;"],"sourceRoot":"/source/"}